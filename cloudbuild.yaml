steps:
  # Paso 1: Instalar dependencias usando npm con Node.js 18
  - name: 'node:18.13-alpine'
    entrypoint: 'npm'
    args: ['ci', '--legacy-peer-deps']

  # Paso 2: Construir la aplicaci√≥n Angular con Node.js 18
  - name: 'node:18.13-alpine'
    entrypoint: 'npm'
    args: ['run', 'build', '--', '--configuration=production']

 # Paso 3: Construir la imagen Docker usando tu Dockerfile existente
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'europe-west1-docker.pkg.dev/linear-encoder-424111-i7/angular-divehub:$COMMIT_SHA', '.']

  # Paso 4: Enviar la imagen a Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'europe-west1-docker.pkg.dev/linear-encoder-424111-i7/angular-divehub:$COMMIT_SHA']

  # Paso 5: Desplegar la imagen en Google Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: ['run', 'deploy', 'angular-app', '--image', 'europe-west1-docker.pkg.dev/linear-encoder-424111-i7/angular-divehub:$COMMIT_SHA', '--platform', 'managed', '--region', 'europe-west1', '--allow-unauthenticated']

images:
  - 'europe-west1-docker.pkg.dev/linear-encoder-424111-i7/angular-divehub:$COMMIT_SHA'
